name: Android SDK Setup, AIDL Check, and APK Build

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  setup-android-sdk:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y wget unzip openjdk-8-jdk

    - name: Create directory for Android SDK
      run: |
        mkdir -p /home/runner/android-sdk/cmdline-tools

    - name: Download and Install Android SDK Command-Line Tools
      run: |
        # Download cmdline-tools
        wget https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip -O cmdline-tools.zip
        unzip cmdline-tools.zip -d /home/runner/android-sdk/cmdline-tools
        rm cmdline-tools.zip

        # List extracted files for debugging
        echo "Listing extracted files"
        ls -R /home/runner/android-sdk/cmdline-tools

        # Set environment variables
        echo "ANDROID_HOME=/home/runner/android-sdk" >> $GITHUB_ENV
        echo "ANDROID_SDK_ROOT=/home/runner/android-sdk" >> $GITHUB_ENV
        echo "PATH=$ANDROID_HOME/cmdline-tools/latest/bin:$PATH" >> $GITHUB_ENV
        echo "PATH=$ANDROID_HOME/platform-tools:$PATH" >> $GITHUB_ENV

    - name: Check if sdkmanager is available in PATH
      run: |
        # Check if sdkmanager is available in the PATH
        echo "Checking if sdkmanager is available"
        which sdkmanager || echo "sdkmanager not found"

    - name: List SDK directory contents for troubleshooting
      run: |
        # List the content of the SDK directory for further debugging
        echo "Listing directories in sdk-tools/bin"
        ls $ANDROID_HOME/cmdline-tools/latest/bin

    - name: Install SDK components (including AIDL)
      run: |
        # Ensure sdkmanager is available and install components
        if ! command -v sdkmanager > /dev/null 2>&1; then
          echo "sdkmanager is not found, please check the installation."
          exit 1
        fi

        # Run sdkmanager and install required components
        yes | sdkmanager --update
        yes | sdkmanager "platforms;android-30"
        yes | sdkmanager "build-tools;30.0.3"
        yes | sdkmanager "cmdline-tools;latest"
        yes | sdkmanager "tools"
        yes | sdkmanager "extras;android;m2repository"
        yes | sdkmanager "extras;google;m2repository"

    - name: List installed SDK components for troubleshooting
      run: |
        sdkmanager --list

    - name: List SDK directories for debugging AIDL location
      run: |
        echo "Listing directories in platform-tools"
        ls $ANDROID_HOME/platform-tools

    - name: Check if AIDL is installed
      run: |
        # Verify if AIDL tool is available
        if command -v aidl > /dev/null 2>&1; then
          echo "AIDL tool is installed."
        else
          echo "AIDL tool is not found."
          exit 1
        fi

  build-apk:
    runs-on: ubuntu-latest
    needs: setup-android-sdk

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y python3 python3-pip
        pip install --upgrade pip
        pip install buildozer

    - name: Install required Android dependencies
      run: |
        # Ensure the required SDK components are installed again
        yes | sdkmanager "platforms;android-30"
        yes | sdkmanager "build-tools;30.0.3"

    - name: Build APK with Buildozer
      run: |
        buildozer android debug
        
    - name: Upload APK artifact
      uses: actions/upload-artifact@v3
      with:
        name: apk-artifact
        path: ./bin/*.apk

  # Optional: Clean up
  clean-up:
    runs-on: ubuntu-latest
    needs: build-apk

    steps:
    - name: Clean up
      run: |
        rm -rf ./bin
